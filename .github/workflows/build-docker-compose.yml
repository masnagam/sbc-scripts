name: Build docker-compose

on:
  repository_dispatch:
    types:
      - build-docker-compose

env:
  MAIN_DISTRO: debian

jobs:
  build-images:
    strategy:
      matrix:
        distro:
          - alpine
          - debian
        include:
          - distro: alpine
            platforms: >-
              linux/amd64,
              linux/arm/v6,
              linux/arm/v7,
              linux/arm64/v8,
          - distro: debian
            platforms: >-
              linux/amd64,
              linux/arm/v7,
              linux/arm64/v8,
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: docker/compose
          ref: refs/tags/${{ github.event.client_payload.version }}
      - name: Commit hash
        id: git-commit
        run: |
          SHA="$(git rev-parse --short HEAD)"
          echo "Commit: $SHA"
          echo "::set-output name=sha::$SHA"
      - name: Docker tags
        id: docker-tags
        run: |
          IMAGE="${{ github.event.client_payload.image }}"
          VERSION="${{ github.event.client_payload.version }}"
          MAIN_TAG="$IMAGE:$VERSION-${{ matrix.distro }}"
          TAGS="$MAIN_TAG"
          if [ "$MAIN_DISTRO" = "${{ matrix.distro }}" ]; then
            TAGS="$TAGS,$IMAGE:$VERSION"
          fi
          if [ "${{ github.event.client_payload.latest }}" = "true" ]; then
            TAGS="$TAGS,$IMAGE:${{ matrix.distro }}"
            if [ "$MAIN_DISTRO" = "${{ matrix.distro }}" ]; then
              TAGS="$TAGS,$IMAGE:latest"
            fi
          fi
          echo "Main tag: $MAIN_TAG"
          echo "Tags: $TAGS"
          echo "::set-output name=main-tag::$MAIN_TAG"
          echo "::set-output name=tags::$TAGS"
      - name: Setup QEMU user-mode emulation
        uses: docker/setup-qemu-action@v1
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          build-args: |
            DISTRO=${{ matrix.distro }}
            GIT_COMMIT=${{ steps.git-commit.outputs.sha }}
          platforms: ${{ matrix.platforms }}
          tags: ${{ steps.docker-tags.outputs.tags }}
          push: true
      - name: Test
        run: |
          # Enable experimental CLI features in Docker daemon
          echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
          sudo service docker restart

          TAG="${{ steps.docker-tags.outputs.main-tag }}"
          for platform in $(echo ${{ matrix.platforms }} | tr ',' ' ')
          do
            echo "Testing $TAG for $platform..."
            docker run --rm --platform=$platform $TAG version
          done
